worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    server {
        listen 80;
        server_name signdoc-core.io.vn dms.signdoc-core.io.vn;

        # Let's Encrypt challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Redirect HTTP to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name signdoc-core.io.vn dms.signdoc-core.io.vn;

        # SSL certificate paths
        ssl_certificate /etc/nginx/certs/live/yourdomain.com/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/live/yourdomain.com/privkey.pem;

        root /usr/share/nginx/html;
        index index.html;

        # Frontend
        location / {
            try_files $uri $uri/ /index.html;  # Support SPA
        }

        # .NET Backend
        location /api/ {
            proxy_pass http://dms:5290;  # Proxy to .NET backend
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # AI Service (OCR Flask App)
        location /ai/ {
            proxy_pass http://aiDms:5000;  # Proxy to Flask app
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        error_page 404 /index.html;  # Handle 404 errors
    }
}
